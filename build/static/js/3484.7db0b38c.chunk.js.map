{"version":3,"file":"static/js/3484.7db0b38c.chunk.js","mappings":"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","sources":["components/NewsComponent/LikeButton/hand.svg","components/NewsComponent/LikeButton/LikeButton.js","pages/InforReviewHomepage.js","components/NewsComponent/NewsComponent.jsx","components/Seperate/index.js","reducers/actions/Theater.js"],"sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgHand(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 84,\n    height: 67,\n    viewBox: \"0 0 84 67\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Icon\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"hand\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle 1\",\n    y: 21.9999,\n    width: 20,\n    height: 45,\n    rx: 5,\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"thumb-4\",\n    d: \"M24 23.9999H79C81.7614 23.9999 84 26.2385 84 28.9999V30.9999C84 33.7613 81.7614 35.9999 79 35.9999H24V23.9999Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"thumb-3\",\n    d: \"M24 53.9999H64C66.7614 53.9999 69 56.2385 69 58.9999V60.9999C69 63.7613 66.7614 65.9999 64 65.9999H24V53.9999Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"thumb-2\",\n    d: \"M24 43.9999H69C71.7614 43.9999 74 46.2385 74 48.9999V50.9999C74 53.7613 71.7614 55.9999 69 55.9999H24V43.9999Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"thumb-1\",\n    d: \"M24 33.9999H74C76.7614 33.9999 79 36.2385 79 38.9999V40.9999C79 43.7613 76.7614 45.9999 74 45.9999H24V33.9999Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"thumb-start\",\n    d: \"M34 29.5506C37.1438 28.5631 44.1537 25.192 47.0428 19.6065\",\n    stroke: \"white\",\n    strokeWidth: 12,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"thumb-end\",\n    d: \"M44.6172 22.7471C46.9813 20.4514 51.7265 14.2881 51.7952 8.00001\",\n    stroke: \"white\",\n    strokeWidth: 12,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHand);\nexport default __webpack_public_path__ + \"static/media/hand.d3c878c8ea3987243c1b2d42d7f66a45.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cn from \"classnames\";\nimport { ReactComponent as Hand } from \"./hand.svg\";\n\nimport \"./styles.scss\";\nimport { getListLikeBaiViet, postLikeUnlikeBaiViet } from \"../../../reducers/actions/Interaction\";\n\nconst particleList = Array.from(Array(10));\n\nexport default function LikeButton({userId, articleId}){\n  // console.log(\"id user: \", userId);\n  const [liked, setLiked] = useState(null);\n  const [clicked, setClicked] = useState(false);\n  const dispatch = useDispatch();\n\n  const {likeList} = useSelector((state) => state.interactionReducer)\n\n  useEffect(() => {\n    dispatch(getListLikeBaiViet(articleId))\n  },[])\n\n  const [soLike, setSoLike]=useState(likeList?.length);\n\n  console.log(\"danh sách nè chời ơi \", likeList);\n\n  const handleLikeButtonClick = async () => {\n    setLiked(!liked);\n    setClicked(true);\n    await dispatch(postLikeUnlikeBaiViet({userId, articleId}));\n    await dispatch(getListLikeBaiViet(articleId));\n  };\n\n  return (\n    <button\n      // onClick={() => {\n      //   setLiked(!liked);\n      //   setClicked(true);\n      //   dispatch(postLikeUnlikeBaiViet({userId, articleId}))\n      //   dispatch(getListLikeBaiViet(articleId))\n      //   setSoLike(likeList.length)\n      //   console.log(\"set nè\");\n      // }}\n\n      onClick={handleLikeButtonClick}\n\n      onAnimationEnd={() => setClicked(false)}\n      className={cn(\"like-button-wrapper\", {\n        liked,\n        clicked,\n      })}\n    >\n      {liked && (\n        <div className=\"particles\">\n          {particleList.map((_, index) => (\n            <div\n              className=\"particle-rotate\"\n              style={{\n                transform: `rotate(${\n                  (360 / particleList.length) * index + 1\n                }deg)`,\n              }}\n            >\n              <div className=\"particle-tick\" />\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"like-button\">\n        <span className=\"like-button__count\">\n          {soLike ? soLike : likeList?.length}{\" \"}\n        </span>\n        <Hand />\n        <span>Like</span>\n        <span className={cn(\"suffix\", { liked })}>d</span>\n      </div>\n    </button>\n  );\n};\n","\nimport { Button, CardActions, IconButton, Typography } from '@material-ui/core';\nimport { Comment as CommentIcon, Share as ShareIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postCommentBaiViet, postLikeUnlikeBaiViet } from '../reducers/actions/Interaction';\nimport interactionApi from \"../api/interactionApi\"\nimport { getInfoUser } from '../reducers/actions/UsersManagement';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport useStyles from './SeeCommentPost/style';\nimport Box from \"@material-ui/core/Box\";\nimport { scroller } from \"react-scroll\";\nimport Swal from 'sweetalert2';\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FAKE_AVATAR } from '../constants/config';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport moment from \"moment\";\nimport \"moment/locale/vi\";\nimport DeleteOrEdit from \"./DeleteOrEdit\"\nmoment.locale(\"vi\");\n\nfunction TabPanel(props) {\n  const { isMobile, children, value, index, ...other } = props;\n  return (\n    <div hidden={value !== index} {...other}>\n      <Box p={isMobile && index === 0 ? 0 : 3}>{children}</Box>\n    </div>\n  );\n}\n\nexport default function InforReviewHomepage({ idReviewPost,   \n  data,\n  onClickBtnMuave,\n  isMobile,\n  onIncreaseQuantityComment,\n  uniqueKey\n  }) {\n\n  const [commentList, setCommentList] = useState()\n  const [likeList, setListLike] = useState()\n  const [likeCheck, setLikeCheck] = useState(false)\n  const { successInfoUser, loadingInfoUser } = useSelector(\n    (state) => state.usersManagementReducer\n  );\n  const { currentUser } = useSelector((state) => state.authReducer);\n  const [soLike, setSoLike] = useState(0);\n  const [soCmt, setSoCmt] = useState(0);\n  // const [isLiked, setIsLiked] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(getInfoUser)\n  },[currentUser])\n  \n  useEffect(()=>{\n    interactionApi.getAllLikeBaiViet(idReviewPost)\n    .then(result => {\n     console.log(\"data danh sách like bài viết: \", result.data.data);\n     setListLike(result.data.data)\n    })\n    .catch(\n      console.log(\"lỗi\")\n    )\n  },[soLike])\n\n  useEffect(()=>{\n    interactionApi.getAllCommentBaiViet(idReviewPost)\n        .then(result => {\n        //  console.log(\"data danh sách comment bài viết nè: \", result.data.data);\n         setCommentList(result.data.data)\n        })\n        .catch(\n          console.log(\"lỗi\")\n    )\n  },[soCmt])\n\n  useEffect(() => {\n    interactionApi.checkUserLikeOrUnlike(currentUser?.data?.id, idReviewPost)\n      .then(result => {\n       console.log(\"Like check: \", result.data);\n       setLikeCheck(result.data.success)\n      })\n      .catch(\n        console.log(\"lỗi\")\n      )\n  }, [idReviewPost]);\n\n\n  // console.log(likeCheck);\n  // console.log(likeList);\n  // console.log(currentUser);\n\n  const handleLikeClick = () => {\n    if (currentUser === null) {\n      isLogin();\n      return;\n    }\n    if (likeCheck === true) {\n      console.log(\"Unlike\");\n      dispatch(postLikeUnlikeBaiViet({ userId: successInfoUser?.data?.id, articleId: idReviewPost }));\n      // dispatch(getListLikeBaiViet(idReviewPost));\n      interactionApi.getAllLikeBaiViet(idReviewPost)\n        .then(result => {\n        console.log(\"data danh sách like bài viết: \", result.data.data);\n        setSoLike(result.data.data.length - 1);\n        setListLike(result.data.data)\n        setLikeCheck(false);\n        })\n        .catch(\n          console.log(\"lỗi\")\n        )\n\n    } else {\n      console.log(\"Like\");\n      dispatch(postLikeUnlikeBaiViet({ userId: successInfoUser?.data?.id, articleId: idReviewPost }));\n      // dispatch(getListLikeBaiViet(idReviewPost));\n      interactionApi.getAllLikeBaiViet(idReviewPost)\n        .then(result => {\n        console.log(\"data danh sách like bài viết: \", result.data.data);\n        setSoLike(result.data.data.length + 1);\n        setListLike(result.data.data)\n        setLikeCheck(true);\n        })\n        .catch(\n          console.log(\"lỗi\")\n        )\n    }\n  };\n\n    const [open, setOpen] = useState(false);\n    const handleCloseDialog = () => {\n      setOpen(false);\n    };\n    const {\n      loadingCommentPost,\n      commentPost,\n    } = useSelector((state) => state.interactionReducer);\n\n    let location = useLocation();\n    const history = useHistory();\n    const [openComment, setOpenComment] = useState(false);\n    const [warningtext, setwarningtext] = useState(false);\n    const [commentListDisplay, setCommentListDisplay] = useState({\n      comment: [],\n      page: 5,\n      hideBtn: false,\n      idScrollTo: \"\",\n    });\n    const [dataComment, setdataComment] = useState({\n      avtId: currentUser?.username,\n      username: currentUser?.name,\n      // point: 2.5,\n      description: \"\",\n      // likes: 0,\n      // maPhim: param.maPhim,\n      dataTest: false,\n      createdAt: \"\",\n      // userLikeThisComment: [],\n    });\n    const classes = useStyles({ hideBtn: commentListDisplay.hideBtn, isMobile });\n\n\n  useEffect(() => {\n    // khi commentList lấy về thành công thì cập nhật số người bình luận\n    if (commentList?.length && !isMobile) {\n      onIncreaseQuantityComment(commentList?.length);\n    }\n  }, [commentList]);\n\n  useEffect(() => {\n    interactionApi.getAllCommentBaiViet(idReviewPost)\n      .then(result => {\n      // console.log(\"data danh sách comment bài viết nè: \", result.data.data);\n      setCommentList(result.data.data)\n      })\n      .catch(\n        console.log(\"lỗi\")\n      )\n    if (commentPost) {\n      // reset text comment\n      setdataComment((data) => ({ ...data, description: \"\" }));\n    }\n  }, [commentPost]);\n\n  console.log(commentList);\n  useEffect(() => {\n    // const comment = commentList?.slice(0, commentListDisplay.page);\n    // const comment = commentList?.content?.slice(0,commentListDisplay?.page);\n    const comment = commentList?.content?.slice(0, commentList?.totalElements);\n    setCommentListDisplay((data) => ({ ...data, comment }));\n  }, [commentList]);\n\n  useEffect(() => {\n    if (commentListDisplay.idScrollTo) {\n      scroller.scrollTo(commentListDisplay.idScrollTo, {\n        duration: 800,\n        offset: -79,\n        smooth: \"easeInOutQuart\",\n      });\n    }\n  }, [commentListDisplay.idScrollTo]);\n\n  const handlePostComment = () => {\n    if (loadingCommentPost) {\n      return;\n    }\n    if (dataComment.description.length < 11) {\n      // nếu comment quá ngắn\n      setwarningtext(true);\n      return;\n    }\n    setwarningtext(false);\n    const currentISOString = new Date().toISOString();\n    setOpenComment(false);\n    // console.log(\"đăng cmt:\", dataComment);\n    dispatch(postCommentBaiViet(\n      {\n        description: dataComment?.description, \n        articleId: idReviewPost, \n        userId: successInfoUser?.data?.id\n      }\n    ))\n  };\n  \n  const setopenMore = () => {\n    let hideBtn = false;\n    let addComment = commentList?.totalElements % 5;\n    if (commentList?.totalElements % 5 === 0) {\n      addComment = 5;\n    }\n    if (commentListDisplay.page + addComment === commentList?.totalElements) {\n      hideBtn = true;\n    }\n    const idScrollTo = `idComment${\n      commentList?.content[commentListDisplay?.page]?.createdAt\n    }`;\n    const page = commentListDisplay?.page + 5;\n    const comment = commentList?.content?.slice(0, page);\n    setCommentListDisplay((data) => ({\n      ...data,\n      comment,\n      page,\n      hideBtn,\n      idScrollTo,\n    }));\n  };\n\n  // const handleLike = (id) => {\n  //   // if (loadingLikeComment) {\n  //   //   return;\n  //   // }  \n  //   if (!currentUser) {\n  //     isLogin();\n  //     return;\n  //   }\n  //   // tăng giảm số lượng like và add/remove email đã like\n  //   const commentUserLiked = commentList.find((item) => item.id === id);\n  //   if (commentUserLiked.userLikeThisComment.includes(currentUser.email)) {\n  //     // xóa user khỏi danh sách liked comment, trừ số lượng like\n  //     commentUserLiked.userLikeThisComment =\n  //       commentUserLiked.userLikeThisComment.filter((item) => {\n  //         return item !== currentUser.email;\n  //       });\n  //     commentUserLiked.likes = commentUserLiked.likes - 1;\n  //   } else {\n  //     commentUserLiked.userLikeThisComment.push(currentUser.email);\n  //     commentUserLiked.likes = commentUserLiked.likes + 1;\n  //   }\n  //   // dispatch(likeComment(id, commentUserLiked));\n  // };\n\n  const handletyping = (event) => {\n    if (event.target.value.length >= 11) {\n      // nếu comment quá ngắn\n      setwarningtext(false);\n    }\n    setdataComment((data) => ({ ...data, description: event.target.value }));\n  };\n\n  const handleClose = () => {\n    setOpenComment(false);\n  };\n\n  const isLogin = () => {\n    if (!currentUser) {\n      // nếu chưa đăng nhập\n      Swal.fire({\n        title: \"Bạn cần phải đăng nhập!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        confirmButtonText: \"Đăng nhập\",\n        cancelButtonText: \"Không\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          history.push(\"/dangnhap\", location.pathname);\n        }\n      });\n    }\n  };\n\n  const handleClickComment = () => {\n    if (!currentUser) {\n      handleCloseDialog();\n      isLogin();\n      return;\n    }\n    setOpenComment(true);\n    setwarningtext(false);\n  };\n\n  useEffect(() => {\n    if (likeList && commentList) {\n      setSoLike(likeList.length);\n      setSoCmt(commentList.totalElements);\n    }\n  }, [likeList, commentList, soLike, soCmt]);\n\n\n  return (\n    <CardActions disableSpacing >\n      <IconButton aria-label=\"add to favorites\" style={{ color: likeCheck === true ? \"blue\" : \"white\" }} onClick={handleLikeClick}>\n        <FavoriteIcon />\n        <Typography>{soLike}</Typography>\n      </IconButton>\n      <div >\n        <IconButton aria-label=\"comment\" style={{ color: \"white\" }} \n              // onClick={() => {\n              //   setIsPaneOpen(true);\n              // }}>\n              onClick={() => {\n                setOpen(true);\n              }}\n              // onClick={handleClickOpen}\n              >\n          <CommentIcon />\n          <Typography>{soCmt}</Typography>\n        </IconButton>\n      </div>\n        {/* <Comment\n        isPaneOpen={isPaneOpen}\n        onClose={() => {\n          setIsPaneOpen(false);\n        }}\n        idReviewPost={idReviewPost}\n        /> */}\n      {/* <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <SidebarComment handleDrawerClose={handleDrawerClose} />\n      </Drawer> */}\n\n    <div>\n      {/* <Button variant=\"outlined\">\n        Open responsive dialog\n      </Button> */}\n      <Dialog\n        // fullScreen={fullScreen}\n\n        fullWidth\n        open={open}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n         <MuiDialogTitle disableTypography className={classes.rootcloseButton}>\n          <DialogTitle id=\"responsive-dialog-title\">\n            {\"Để lại bình luận của bạn\"}\n          </DialogTitle>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleCloseDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n        </MuiDialogTitle>\n        {/* <DialogActions> */}\n        <div className={classes.theLon}>\n          <div className={classes.danhGia}>\n              <div className={classes.inputRoot} onClick={handleClickComment}>\n                <span className={classes.avatarReviewer}>\n                  <img\n                    src={successInfoUser?.data?.image ? successInfoUser?.data?.image : FAKE_AVATAR}\n                    alt=\"avatar\"\n                    className={classes.avatarImg}\n                  />\n                </span>\n                <input\n                  className={classes.inputReviwer}\n                  type=\"text\"\n                  placeholder=\"Để lại bình luận cho bài viết?\"\n                  readOnly=\"readonly\"\n                />\n                {/* <span className={classes.imgReviewerStar}>\n                  <Rating\n                    value={5}\n                    size={isMobile ? \"small\" : \"medium\"}\n                    readOnly\n                  />\n                </span> */}\n              </div>\n            </div>\n            <div\n              className=\"text-center mb-2 text-white\"\n              hidden={!loadingCommentPost}\n            >\n              <CircularProgress size={20} color=\"inherit\" />\n            </div>\n            {commentListDisplay?.comment?.map((item, index) => (\n              <div\n                // key={`${item.id}`}\n                key={index}\n                className={classes.itemDis}\n                id={`idComment${item.id}`}\n              >\n                <div className={classes.infoUser}>\n                  <div className={classes.left}>\n                    <span className={classes.avatar}>\n                      <img\n                        // src={item?.image}\n                        src={item?.image ?item?.image: FAKE_AVATAR}\n                        alt=\"avatar\"\n                        className={classes.avatarImg}\n                      />\n                    </span>\n\n                    <span className={classes.liveUser}>\n                      <p className={classes.userName}>{item.name}</p>\n                      <p className={classes.timePost}>\n                        {moment(item.createdAt).fromNow()}\n                      </p>\n\n                    </span>\n\n                  </div>\n                  {/* <div className={classes.right}>\n                    <p className=\"text-success\">{item.point}</p>\n                    <Rating\n                      value={(item.point * 5) / 10}\n                      precision={0.5}\n                      size={isMobile ? \"small\" : \"medium\"}\n                      readOnly\n                    />\n                  </div> */}\n\n                    <span className={classes.nutTuyChon}>\n                        <DeleteOrEdit />\n                    </span>\n                  <div className=\"clearfix\"></div>\n                </div>\n                <div className=\"py-3 mb-3 border-bottom\">\n                  <p className=\"text-break\">{item.description}</p>\n                </div>\n\n\n                {/* <span\n                  className=\"d-inline-block\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => handleLike(item.id)}\n                >\n                  <span className=\"mr-2\">\n                    {((userLikeThisComment) => {\n                      return (\n                        <ThumbUpIcon\n                          style={{\n                            color: userLikeThisComment?.includes(\n                              currentUser?.email\n                            )\n                              ? \"#fb4226\"\n                              : \"#73757673\",\n                          }}\n                        />\n                      );\n                    })(item.userLikeThisComment)}\n                  </span>\n                  <span style={{ color: \"#737576\" }}>\n                    <span>{item.likes}</span> Thích\n                  </span>\n                </span> */}\n              </div>\n            ))}\n            <div className={classes.moreMovie}>\n              <Button\n                variant=\"outlined\"\n                onClick={() => setopenMore()}\n                className={classes.moreMovieButton}\n              >\n                Xem thêm\n              </Button>\n            </div>\n          </div>\n      </Dialog>\n\n      <Dialog\n        open={openComment}\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth\n        className={classes.dialog}\n      >\n        <MuiDialogTitle disableTypography className={classes.rootcloseButton}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </MuiDialogTitle>\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <span style={{fontSize: \"20px\", marginTop:\"1rem\"}}>Để lại bình luận</span>\n        </Grid>\n        <DialogContent className={classes.dialogContent}>\n          <TextField\n            className={classes.textField}\n            onChange={(event) => handletyping(event)}\n            fullWidth\n            value={dataComment.description}\n            variant=\"outlined\"\n            label={\n              dataComment.description\n                ? \"\"\n                : \"Nói lên suy nghĩ của bạn...\"\n            }\n          />\n        </DialogContent>\n        <DialogActions className=\"justify-content-center flex-column px-4\">\n          {warningtext && (\n            <DialogContentText className=\"text-danger\">\n              Vui lòng gõ hơn 10 ký tự!\n            </DialogContentText>\n          )}\n          <Button\n            onClick={handlePostComment}\n            variant=\"contained\"\n            className={classes.btnDang}\n          >\n            Đăng\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    \n    </CardActions>\n\n  );\n}\n","import React, { useState, useEffect, Fragment, cloneElement } from \"react\";\nimport \"./NewsComponent.scss\";\nimport { NavLink,useHistory } from \"react-router-dom\";\nimport { qLyPhimService } from \"../../services/QuanLyPhimServices\";\nimport SpinnerLoading from \"../SpinnerLoading/SpinnerLoading\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LikeButton from \"./LikeButton/LikeButton\";\nimport { useSelector } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport { Comment as CommentIcon, Share as ShareIcon, Favorite as FavoriteIcon } from '@material-ui/icons';\nimport InforReviewHomepage from \"../../pages/InforReviewHomepage\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 150,\n  },\n});\n\nexport default function NewsComponent() {\n  const {successInfoUser} = useSelector((state) => state.usersManagementReducer)\n  // console.log(\"usẻ thích\", successInfoUser);\n  let [danhSachTinTuc, setDanhSachTinTuc] = useState([]);\n  let [loading, setLoading] = useState(true);\n  useEffect(() => {\n    qLyPhimService\n      .layReviewDuocDuyet()\n      // .layReviewChuaDuyet()\n      .then((res) => {\n        setDanhSachTinTuc(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const history = useHistory();\n  const handlerSeeMore =() =>{\n    history.push(\"/review\")\n  }\n  // console.log(\"danhSachTinTuc: \", danhSachTinTuc?.data);\n\n  var moment = require(\"moment\");\n  const renderTinTuc = () => {\n    return danhSachTinTuc?.data?.reverse().map((tinTuc, index) => {\n      if(tinTuc?.type === \"REVIEWS\" && tinTuc?.status === \"APPROVE\") {\n        const uniqueKey = `${tinTuc.id}_${index}`; \n        // if(tinTuc?.status === \"APPROVE\") {\n      return (\n        <div className=\"news__items\"  key={uniqueKey}>\n          <div className=\"items__img\">\n            <img src={tinTuc?.mainImage} alt={tinTuc?.mainImage} />\n          </div>\n          <div className=\"items__text\">\n            <h4 className=\"items__text-title\">\n              <NavLink\n                className=\"items__text-link\"\n                to={`/review/${tinTuc?.id}`}\n              >\n                {tinTuc?.title || (\n                  <SkeletonTheme color=\"#202020\" highlightColor=\"#111111\">\n                    <h2>\n                      <Skeleton count={3} duration={2} />\n                    </h2>\n                  </SkeletonTheme>\n                )}\n              </NavLink>\n            </h4>\n            <p className=\"items__text-description\">{tinTuc?.brief}</p>\n            <div className=\"items__text-author\">\n            Tác giả:{\" \"}\n              <NavLink\n                to={`/reviewer/${tinTuc?.createdBy}`}\n              >\n                {tinTuc?.createdBy}\n              </NavLink>\n\n              <span className=\"items__text-days\">\n                Ngày cập nhật{\" \"}{moment(tinTuc?.dayupload).format(\"hh:mm DD/MM/yyyy\")}\n              </span>\n            </div>\n            <div>\n              {/* {cloneElement(<InforReviewHomepage />, { idReviewPost: tinTuc.id })} */}\n              <InforReviewHomepage idReviewPost={tinTuc.id} uniqueKey={uniqueKey}/>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    });\n  };\n  const classes = useStyles();\n  // const renderTinTucHot = () => {\n  //   return danhSachTinTuc?.data?.reverse().map((tinTuc, index) => {\n  //     if(tinTuc?.type === \"REVIEWS\" && tinTuc?.status === \"APPROVE\") {\n  //       // if(tinTuc?.status === \"APPROVE\") {\n  //     return (\n  //       // <div className=\"news__items\" key={index}>\n  //       //   <div className=\"items__img\">\n  //       //     <img src={tinTuc.mainImage} alt={tinTuc.mainImage} />\n  //       //   </div>\n  //       //   <div className=\"items__text\">\n  //       //     <h5 className=\"items__text-title\">\n  //       //       <NavLink\n  //       //         className=\"items__text-link\"\n  //       //         to={`/review/${tinTuc.id}`}\n  //       //       >\n  //       //         {tinTuc.title}\n  //       //       </NavLink>\n  //       //     </h5>\n  //       //   </div>\n  //       // </div>\n  //       <Card className={classes.root} key={index}>\n  //         <CardActionArea>\n  //           <CardMedia\n  //             className={classes.media}\n  //             image={tinTuc.mainImage}\n  //             title={tinTuc.title}\n  //           />\n  //           <CardContent>\n  //             <Typography gutterBottom variant=\"h5\" component=\"h2\">\n\n  //                 <NavLink\n  //               className=\"items__text-link\"  \n  //                 to={`/review/${tinTuc.id}`}\n  //               >\n  //                {tinTuc.title}\n  //              </NavLink>\n  //               {/* {tinTuc.title} */}\n  //             </Typography>\n  //           </CardContent>\n  //         </CardActionArea>\n  //         {/* <CardActions>\n  //           <Button size=\"small\" color=\"primary\">\n  //             Đọc thêm\n  //           </Button>\n  //           <Button size=\"small\" color=\"primary\">\n  //             Viết Review\n  //           </Button>\n  //         </CardActions> */}\n  //       </Card>\n  //     );\n  //     }\n  //   });\n  // };\n  if (loading) {\n    return <SpinnerLoading />;\n  } else {\n    return (\n      <div>\n        <div className=\"news__header\">\n          <div className=\"overlay\">\n            <div className=\"title__description\">\n                Latest Reviews\n            </div>\n          </div>\n        </div>\n        <div className=\"news__container container\">\n          <div className=\"news__content row\">\n            <div className=\"news__left col-md-12 col-sm-12\">\n              <h3 className=\"news__title\">Reviews</h3>\n              {renderTinTuc()}\n            </div>\n            {/* <div className=\"news__right col-md-4 col-sm-12\">\n              <h3 className=\"news__title\">Hot</h3>\n              {renderTinTucHot()}\n            </div> */}\n          </div>\n          <div className=\"readMore\">\n            <button className=\"btn__readmore\" type=\"button\" onClick={handlerSeeMore}>See More</button>\n          </div>\n        </div>\n        </div>\n    );\n  }\n}\n","import React from 'react'\n// import post from \"../../assets/posterBG.jpg\"\n\nexport default function index() {\n  const style = {\n    height: \"80px\",\n    maxWidth: 940,\n    margin: \"auto\",\n    width: \"100%\",\n    background:\"url(../../assets/posterBG.jpg)\",\n    backgroundSize: \"100%\",\n    backgroundRepeat: \"no-repeat\"\n  }\n  return (\n    <div style={style}></div>\n  )\n}\n","\nimport theatersApi from '../../api/theatersApi';\nimport {\n  GET_THEATERS_SHOWTIME_REQUEST, GET_THEATERS_SHOWTIME_SUCCESS, GET_THEATERS_SHOWTIME_FAIL,\n  GET_THEATERS_SHOWTIME_REQUEST2, GET_THEATERS_SHOWTIME_SUCCESS2, GET_THEATERS_SHOWTIME_FAIL2,\n} from '../constants/Theater';\n\nexport const getTheaters = () => {\n  return (dispatch) => {\n    dispatch({\n      type: GET_THEATERS_SHOWTIME_REQUEST\n    })\n    theatersApi.getThongTinLichChieuHeThongRap()\n      .then(result => {\n        dispatch({\n          type: GET_THEATERS_SHOWTIME_SUCCESS,\n          payload: { data: result.data }\n        })\n      }\n      )\n      .catch(\n        error => {\n          dispatch({\n            type: GET_THEATERS_SHOWTIME_FAIL,\n            payload: { errorTheaterList: error.response?.data ? error.response.data : error.message, }\n          })\n        }\n      )\n  }\n}\n\nexport const getTheaters2 = () => {\n  return (dispatch) => {\n    dispatch({\n      type: GET_THEATERS_SHOWTIME_REQUEST2\n    })\n    theatersApi.getThongTinLichChieuHeThongRap()\n      .then(result => {\n        console.log(result);\n        dispatch({\n          type: GET_THEATERS_SHOWTIME_SUCCESS2,\n          payload: { data: result.data }\n        })\n      }\n      )\n      .catch(\n        error => {\n          dispatch({\n            type: GET_THEATERS_SHOWTIME_FAIL2,\n            payload: { errorTheaterList2: error.response?.data ? error.response.data : error.message, }\n          })\n        }\n      )\n  }\n}\nexport const getTheaters4 = () => {\n  return (dispatch) => {\n    dispatch({\n      type: GET_THEATERS_SHOWTIME_REQUEST\n    })\n    theatersApi.getThongTinLichChieuCoPhim()\n      .then(result => {\n        console.log(result);\n        dispatch({\n          type: GET_THEATERS_SHOWTIME_SUCCESS,\n          payload: { data: result.data }\n        })\n      }\n      )\n      .catch(\n        error => {\n          dispatch({\n            type: GET_THEATERS_SHOWTIME_FAIL,\n            payload: { errorTheaterList2: error.response?.data ? error.response.data : error.message, }\n          })\n        }\n      )\n  }\n}\n\nexport const getTheaters3 = () => {\n  return (dispatch) => {\n    dispatch({\n      type: GET_THEATERS_SHOWTIME_REQUEST2\n    })\n    theatersApi.getThongTinLichChieuHeThongRap()\n      .then(result => {\n        dispatch({\n          type: GET_THEATERS_SHOWTIME_SUCCESS2,\n          payload: { data: result.data }\n        })\n      }\n      )\n      .catch(\n        error => {\n          dispatch({\n            type: GET_THEATERS_SHOWTIME_FAIL2,\n            payload: { errorTheaterList2: error.response?.data ? error.response.data : error.message, }\n          })\n        }\n      )\n  }\n}"],"names":["Array","from","InforReviewHomepage","idReviewPost","isMobile","data","onClickBtnMuave","onIncreaseQuantityComment","uniqueKey","useState","commentList","setCommentList","likeList","setListLike","likeCheck","setLikeCheck","useSelector","state","usersManagementReducer","successInfoUser","currentUser","loadingInfoUser","authReducer","soLike","setSoLike","soCmt","setSoCmt","dispatch","useDispatch","useEffect","getInfoUser","interactionApi","then","result","console","log","catch","id","success","open","setOpen","handleCloseDialog","interactionReducer","loadingCommentPost","commentPost","location","useLocation","history","useHistory","openComment","setOpenComment","warningtext","setwarningtext","comment","page","hideBtn","idScrollTo","commentListDisplay","setCommentListDisplay","avtId","username","name","description","dataTest","createdAt","dataComment","setdataComment","classes","useStyles","length","content","slice","totalElements","scroller","duration","offset","smooth","handleClose","isLogin","Swal","title","icon","showCancelButton","confirmButtonColor","confirmButtonText","cancelButtonText","isConfirmed","push","pathname","CardActions","disableSpacing","IconButton","style","color","onClick","postLikeUnlikeBaiViet","userId","articleId","Favorite","Typography","Comment","Dialog","fullWidth","onClose","disableTypography","className","rootcloseButton","DialogTitle","closeButton","Close","theLon","danhGia","inputRoot","avatarReviewer","src","image","FAKE_AVATAR","alt","avatarImg","inputReviwer","type","placeholder","readOnly","hidden","CircularProgress","size","map","item","index","itemDis","infoUser","left","avatar","liveUser","userName","timePost","moment","fromNow","nutTuyChon","DeleteOrEdit","moreMovie","Button","variant","addComment","setopenMore","moreMovieButton","maxWidth","dialog","Grid","container","direction","justify","alignItems","fontSize","marginTop","DialogContent","dialogContent","TextField","textField","onChange","event","target","value","handletyping","label","DialogActions","DialogContentText","Date","toISOString","postCommentBaiViet","btnDang","makeStyles","root","media","height","NewsComponent","danhSachTinTuc","setDanhSachTinTuc","loading","setLoading","qLyPhimService","res","err","require","SpinnerLoading","reverse","tinTuc","status","mainImage","to","highlightColor","count","brief","createdBy","dayupload","format","renderTinTuc","margin","width","background","backgroundSize","backgroundRepeat","getTheaters","GET_THEATERS_SHOWTIME_REQUEST","theatersApi","GET_THEATERS_SHOWTIME_SUCCESS","payload","error","GET_THEATERS_SHOWTIME_FAIL","errorTheaterList","response","message"],"sourceRoot":""}