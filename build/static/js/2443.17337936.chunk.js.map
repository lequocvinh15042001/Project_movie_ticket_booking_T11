{"version":3,"file":"static/js/2443.17337936.chunk.js","mappings":"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","sources":["api/usersApi.js","layouts/StaffLayout/NavBar/NavItem.js","layouts/StaffLayout/NavBar/index.js","../node_modules/react-icons/lib/esm/iconContext.js","layouts/StaffLayout/NavAdminStaff/SubMenu.js","layouts/StaffLayout/NavAdminStaff/Sidebar.js","layouts/StaffLayout/TopBar.js","layouts/StaffLayout/index.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import axiosClient from \"./axiosClient\";\n\nconst usersApi = {\n  postDangKy: (user) => {\n    const path = \"/auth/signup\";\n    return axiosClient.post(path, user);\n  },\n\n  //post user:object taiKhoan, matKhau => nhận về data có accessToken\n  postDangNhap: (user) => {\n    const path = \"/auth/signin\";\n    console.log(user);\n    return axiosClient.post(path, user);\n  },\n\n  getDanhSachNguoiDung: () => {\n    const path = \"/user/getAll\";\n    return axiosClient.get(path);\n  },\n\n  getDanhSachNguoiDungPhanTrang: (soTrang, soPhanTuTrenTrang) => {\n    const path = \"/\";\n    return axiosClient.get(path, { soTrang, soPhanTuTrenTrang });\n  },\n\n  postThemNhanVien: (user) => {\n    const path = \"/auth/registerStaff\";\n    return axiosClient.post(path, user);\n  },\n\n  postThemNguoiDung: (user) => {\n    const path = \"/auth/signup\";\n\n    return axiosClient.post(path, user);\n  },\n\n  getTicket: (userId) =>{\n    const path = `/tickets?userId=${userId}`;\n    return axiosClient.get(path);\n  },\n\n  getTicketUser: (userId) =>{\n    const path = `/tickets?userId=${userId}`;\n    return axiosClient.get(path);\n  },\n\n  getTicketByAdminStaff: () =>{\n    const path = `/tickets/getList`;\n    return axiosClient.get(path);\n  },\n\n  deleteUser: (taiKhoan) => {\n    const path = `user/${taiKhoan}`;\n\n    return axiosClient.delete(path);\n  },\n\n  editTaiKhoan: (user) => {\n    const path = `/user/updateInfo`;\n    return axiosClient.put(path, user);\n  },\n\n  editPassword: (newPassword, oldPassword) => {\n    const path = `/auth/changePassword?newPassword=${newPassword}&oldPassword=${oldPassword}`;\n    return axiosClient.put(path);\n  },\n\n  getThongTinTaiKhoan: () => {\n    // console.log(\"Vô get\");\n    const path = \"/user/me\";\n    return axiosClient.get(path);\n  },\n\n  getChiTietTaiKhoan: (username) => {\n    // console.log(username);\n    const path = `/user/${username}`;\n    return axiosClient.get(path);\n  },\n\n  getChiTietTaiKhoanReviewer: (username) => {\n    // console.log(username);\n    const path = `/user/${username}`;\n    return axiosClient.get(path);\n  },\n\n};\n\nexport default usersApi;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\nimport Swal from \"sweetalert2\";\nimport { useSelector } from 'react-redux';\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n    position: \"relative\",\n    zIndex: 1201,\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const isExistUserModified = useSelector((state) => state.usersManagementReducer.isExistUserModified);\n  const classes = useStyles();\n  const history = useHistory();\n  let location = useLocation();\n  const onChangePageManagement = () => {\n    if (isExistUserModified && location.pathname === \"/admin/users\" && href !== \"/admin/users\") {\n      Swal.fire({\n        title: 'Dữ liệu đã chỉnh sửa sẽ bị mất khi chuyển trang?',\n        text: \"Bạn không thể hoàn nguyên!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Chuyển trang!',\n        cancelButtonText: 'Ở lại!'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          history.push(href);\n        }\n      })\n    } else {\n      history.push(href);\n    }\n  }\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        className={clsx(classes.button, location.pathname === href && classes.active)}\n        onClick={onChangePageManagement}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect, useState } from 'react';\n\nimport MovieIcon from '@material-ui/icons/Movie';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport NavItem from './NavItem';\nimport { FAKE_AVATAR } from '../../../constants/config';\nimport { GET_INFO_USER_FAIL, GET_INFO_USER_REQUEST, GET_INFO_USER_SUCCESS } from '../../../reducers/constants/UsersManagement';\nimport usersApi from '../../../api/usersApi';\n\nconst items = [\n  {\n    href: '/staff/movies',\n    icon: MovieIcon,\n    title: 'Quản lý phim'\n  },\n  {\n    href: '/staff/branch',\n    icon: PostAddIcon,\n    title: 'Quản lý chi nhánh rạp'\n  },\n  {\n    href: '/staff/reviews',\n    icon: PostAddIcon,\n    title: 'Quản lý Review'\n  },\n  {\n    href: '/staff/category',\n    icon: PostAddIcon,\n    title: 'Quản lý Category'\n  },\n  {\n    href: '/staff/events',\n    icon: PostAddIcon,\n    title: 'Quản lý sự kiện'\n  },\n  {\n    href: '/staff/ticket',\n    icon: PostAddIcon,\n    title: 'Quản lý vé'\n  },\n  {\n    href: '/staff/bills/',\n    icon: PostAddIcon,\n    title: 'Thanh toán'\n  },\n  {\n    href: '/staff/book/',\n    icon: PostAddIcon,\n    title: 'Đặt cho người dùng'\n  },\n  {\n    href: '/staff/showtimes',\n    icon: PostAddIcon,\n    title: 'Quản lý lịch chiếu'\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    // top: 64,\n    position:'relative',\n    \n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nexport default function NavBar({ onMobileClose, openMobile }) {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [userStaff, setUserStaff]= useState();\n  const { currentUser } = useSelector((state) => state.authReducer);\n\n  useEffect(() => {\n    dispatch({\n      type: GET_INFO_USER_REQUEST\n    })\n    usersApi.getThongTinTaiKhoan()\n      .then(result => {\n        // console.log(\"getThongTinTaiKhoan: \", result);\n        setUserStaff(result.data.data)\n        dispatch({\n          type: GET_INFO_USER_SUCCESS,\n          payload: {\n            data: result.data,\n          }\n        })\n      }\n      )\n      .catch(\n        error => {\n          dispatch({\n            type: GET_INFO_USER_FAIL,\n            payload: {\n              error: error.response?.data?.data ? error.response.data?.data : error.message,\n            }\n          })\n        }\n      )\n  },[])\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const user = {\n    avatar: userStaff?.image,\n    jobTitle: 'Nhân viên',\n    name: userStaff?.name,\n  };\n\n  const handleUser = () => {\n    history.push(\"/taikhoan\")\n  }\n\n\n  // đây là nội dung cột bên trái\n  const content = (\n\n    // cái này là div để dàn thành cột\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Divider />\n{/* đây là phần logo avatar user và tên user */}\n      <Box\n        // căn giữa cột\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={3} // padding 2\n      >\n        <Tooltip title=\"User information\">\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n            onClick={handleUser}\n          />\n        </Tooltip>\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      {/* đây là phần menu lựa chọn */}\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            // NavItem hiện thị ra icon và title\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              // icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n\n    </Box>\n    \n  );\n\n  return (\n    <>\n      {/* đây là giao diện mobile */}\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile} // đóng mở tùy thuộc vào bạn click\n          variant=\"temporary\" // kiểu temporary có một lớp phủ mờ hiện ra cho đến khi bạn chọn xong thì Drawer mới đóng lại\n        >\n          {content}\n        </Drawer>\n\n      </Hidden>\n      {/* đây là giao diện desktop */}\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open // luôn luôn hiện Drawer\n          variant=\"persistent\" // kiểu persistent không có lớp phủ mờ khi hiện drawer\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\n// export default NavBar;\n\n","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SidebarLink = styled(Link)`\n  display: flex;\n  color: #e1e9fc;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  list-style: none;\n  height: 60px;\n  text-decoration: none;\n  font-size: 18px;\n\n  &:hover {\n    background: #252831;\n    border-left: 4px solid #632ce4;\n    cursor: pointer;\n  }\n`;\n\nconst SidebarLabel = styled.span`\n  margin-left: 16px;\n`;\n\nconst DropdownLink = styled(Link)`\n  background: #414757;\n  height: 60px;\n  padding-left: 3rem;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #f5f5f5;\n  font-size: 18px;\n\n  &:hover {\n    background: #632ce4;\n    cursor: pointer;\n  }\n`;\n\nconst SubMenu = ({ item }) => {\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => setSubnav(!subnav);\n\n  return (\n    <>\n      <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\n        <div>\n          {item.icon}\n          <SidebarLabel>{item.title}</SidebarLabel>\n        </div>\n        <div>\n          {item.subNav && subnav\n            ? item.iconOpened\n            : item.subNav\n            ? item.iconClosed\n            : null}\n        </div>\n      </SidebarLink>\n      {subnav &&\n        item.subNav.map((item, index) => {\n          return (\n            <DropdownLink to={item.path} key={index}>\n              {item.icon}\n              <SidebarLabel>{item.title}</SidebarLabel>\n            </DropdownLink>\n          );\n        })}\n    </>\n  );\n};\n\nexport default SubMenu;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { SidebarData } from './SidebarData';\nimport SubMenu from './SubMenu';\nimport { IconContext } from 'react-icons/lib';\n\nconst Nav = styled.div`\n  background: #15171c;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst NavIcon = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst SidebarNav = styled.nav`\n  background: #15171c;\n  width: 250px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\n  transition: 350ms;\n  z-index: 10;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <Nav>\n          <NavIcon to='#'>\n            <FaIcons.FaBars onClick={showSidebar} />\n          </NavIcon>\n        </Nav>\n        <SidebarNav sidebar={sidebar}>\n          <SidebarWrap>\n            <NavIcon to='#'>\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\n            </NavIcon>\n            {SidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { LOGOUT } from '../../reducers/constants/Auth';\nimport { LOADING_BACKTO_HOME } from '../../reducers/constants/Lazy';\nimport Swal from 'sweetalert2';\nconst TopBar = ({\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const [notifications] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    \n    swalWithBootstrapButtons.fire({\n      title: 'Đăng xuất!',\n      text: \"Chắc chắn bạn muốn đăng xuất?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Okay, ngay bây giờ!',\n      cancelButtonText: 'Không, dừng lại!',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch({ type: LOGOUT })\n        swalWithBootstrapButtons.fire(\n          'Đã đăng xuất!',\n          'DONE.',\n          'success'\n        )\n      } else if (\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Đã dừng',\n          'Không đăng xuất!',\n          'error'\n        )\n      }\n    })\n  }\n\n  const handleClickLogo = () => {\n    dispatch({ type: LOADING_BACKTO_HOME })\n    setTimeout(() => {\n      history.push(\"/\", \"\")\n    }, 50);\n  }\n  return (\n\n    // đây là phần header trên cùng\n    <AppBar\n      elevation={0}\n      position=\"static\"\n      {...rest}\n    >\n      <Toolbar>\n        <div onClick={handleClickLogo} style={{ cursor: \"pointer\" }}>\n          {/* <img src=\"/img/headTixLogo.png\" alt=\"logo\" style={{ height: 50 }} /> */}\n          <h5>WELCOM TO GOLDEN TICKET NEW THEATER</h5>\n        </div>\n\n        {/* 1 thẻ div chiếm hết khoảng trống còn lại dể dồn các icon về 2 bên */}\n        <Box flexGrow={1} />\n\n        {/* cái icon chuông và đăng xuất */}\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"secondary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"inherit\" onClick={handleLogout}>\n              <InputIcon />\n            </IconButton>\n          </Tooltip>\n        </Hidden>\n\n        {/* cái icon menu */}\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            // nếu click thì thực hiện func đóng mở Nav được truyền vào từ cha\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n// báo lỗi nếu kiểu dữ liệu truyền vào props không đúng với yều cầu bên dưới\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n\n","\nimport React, { useEffect, useState } from 'react';\n\nimport { SnackbarProvider } from 'notistack';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NavBar from './NavBar';\nimport NavAdminStaff from './NavAdminStaff/Sidebar'\nimport TopBar from './TopBar';\nimport usersApi from '../../api/usersApi';\nimport { GET_INFO_USER_FAIL, GET_INFO_USER_REQUEST, GET_INFO_USER_SUCCESS } from '../../reducers/constants/UsersManagement';\nimport { LOGIN_FAIL, LOGIN_SUCCESS } from '../../reducers/constants/Auth';\n\nexport default function AdminLayout(props) {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  const isMobile = useMediaQuery('(max-width:768px)');\n  const dispatch = useDispatch();\n  const { currentUser } = useSelector((state) => state.authReducer);\n  // console.log(currentUser);\n  // const { currentUser } = useSelector((state) => state.usersManagementReducer);\n  // console.log(currentUser);\n  const [userAdmin, setUserAdmin]= useState();\n  // if (currentUser?.maLoaiNguoiDung !== \"QuanTri\") { // nếu không phải tài khoản quản trị thì ẩn đi giao diện AdminLayout, vẫn truyền vào children để hiện thông báo trong children\n  //   return <>{props.children}</>\n  // }\n\n  // useEffect(() => {\n  //   dispatch({\n  //     type: GET_INFO_USER_REQUEST\n  //   })\n  //   usersApi.getThongTinTaiKhoan()\n  //     .then(result => {\n  //       console.log(\"getThongTinTaiKhoan: \", result);\n  //       setUserAdmin(result.data.data)\n  //       dispatch({\n  //         type: GET_INFO_USER_SUCCESS,\n  //         payload: {\n  //           data: result.data.data,\n  //         }\n  //       })\n  //     }\n  //     )\n  //     .catch(\n  //       error => {\n  //         dispatch({\n  //           type: GET_INFO_USER_FAIL,\n  //           payload: {\n  //             error: error.response?.data?.data ? error.response.data?.data : error.message,\n  //           }\n  //         })\n  //       }\n  //     )\n  // },[])\n  const [cUser , setCUser] = useState();\n  useEffect(() => {\n    usersApi.getThongTinTaiKhoan()\n    .then((response) =>{\n      // console.log(\"AMIN LAYOUT: \", response?.data);\n      setCUser(response?.data);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          data: response?.data,\n        },\n      });\n    })\n    .catch((error) => {\n      // console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: {\n          error: error.response?.data?.data ? error.response?.data?.data : error.message,\n        },\n      });\n    })\n    // console.log(setUserLog.data);\n    // localStorage.setItem('userInfo', JSON.stringify({...cUser}))\n    // localStorage.setItem('userLogin', JSON.stringify(...setUserLog.data))\n  },[])\n\n  // console.log(cUser);\n  // currentUser = userAdmin;\n  // if (currentUser?.data?.role === \"[ROLE_ADMIN]\") { // nếu không phải tài khoản quản trị thì ẩn đi giao diện AdminLayout, vẫn truyền vào children để hiện thông báo trong children\n  //   return <>{props.children}</>\n  // }\n  if (!currentUser?.data?.role === \"[ROLE_STAFF]\") { // nếu không phải tài khoản quản trị thì ẩn đi giao diện AdminLayout, vẫn truyền vào children để hiện thông báo trong children\n    return <>{props.children}</>\n  }\n  return (\n    // package notistack: popup thông báo nhỏ gọn\n    <SnackbarProvider maxSnack={3}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} style={{backgroundColor:\"white\", color:\"black\"}}/>\n      <div className=\"row\">\n        <div style={{ width: 255, backgroundColor:\"white\"}}>\n          {/* đây là phần NavBar nằm bên trái, có thể đóng mở khi màn hình nhỏ */}\n          <NavBar\n            onMobileClose={() => setMobileNavOpen(false)}\n            openMobile={isMobileNavOpen}\n          />\n          {/* <NavAdminStaff/> */}\n        </div>\n        <div style={{ width: isMobile ? \"100%\" : \"calc(100% - 255px)\",backgroundColor:\"white\", height:\"100vh\" }}>\n          {/* đây là nội dung chính: UserManagement, MoviesManagement, ReateShowtime */}\n          {props.children}\n        </div>\n      </div>\n    </SnackbarProvider>\n  )\n}\n\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["usersApi","postDangKy","user","axiosClient","postDangNhap","console","log","getDanhSachNguoiDung","getDanhSachNguoiDungPhanTrang","soTrang","soPhanTuTrenTrang","postThemNhanVien","postThemNguoiDung","getTicket","userId","path","getTicketUser","getTicketByAdminStaff","deleteUser","taiKhoan","editTaiKhoan","editPassword","newPassword","oldPassword","getThongTinTaiKhoan","getChiTietTaiKhoan","username","getChiTietTaiKhoanReviewer","useStyles","makeStyles","theme","item","display","paddingTop","paddingBottom","position","zIndex","button","color","palette","text","secondary","fontWeight","typography","fontWeightMedium","justifyContent","letterSpacing","padding","textTransform","width","icon","marginRight","spacing","title","active","primary","main","className","href","Icon","rest","isExistUserModified","useSelector","state","usersManagementReducer","classes","history","useHistory","location","useLocation","ListItem","clsx","disableGutters","Button","pathname","onClick","Swal","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","push","size","items","MovieIcon","PostAddIcon","mobileDrawer","desktopDrawer","height","avatar","cursor","NavBar","onMobileClose","openMobile","dispatch","useDispatch","useState","userStaff","setUserStaff","authReducer","currentUser","useEffect","type","GET_INFO_USER_REQUEST","data","GET_INFO_USER_SUCCESS","payload","catch","error","GET_INFO_USER_FAIL","response","message","image","jobTitle","name","content","Box","flexDirection","Divider","alignItems","p","Tooltip","Avatar","src","Typography","variant","List","map","Hidden","lgUp","Drawer","anchor","paper","onClose","open","mdDown","defaultProps","DefaultContext","styled","Link","undefined","style","attr","React","sidebar","onMobileNavOpen","notifications","AppBar","elevation","Toolbar","LOADING_BACKTO_HOME","setTimeout","flexGrow","IconButton","Badge","badgeContent","length","swalWithBootstrapButtons","customClass","confirmButton","cancelButton","buttonsStyling","fire","reverseButtons","LOGOUT","dismiss","Input","Menu","AdminLayout","props","isMobileNavOpen","setMobileNavOpen","isMobile","useMediaQuery","setCUser","LOGIN_SUCCESS","LOGIN_FAIL","role","children","maxSnack","backgroundColor","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}