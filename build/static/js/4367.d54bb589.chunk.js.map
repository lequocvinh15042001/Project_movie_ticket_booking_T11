{"version":3,"file":"static/js/4367.d54bb589.chunk.js","mappings":"wHAEMA,EAAW,CACfC,WAAY,SAACC,GAEX,OAAOC,EAAAA,EAAAA,KADM,eACiBD,EAChC,EAGAE,aAAc,SAACF,GAGb,OADAG,QAAQC,IAAIJ,GACLC,EAAAA,EAAAA,KAFM,eAEiBD,EAChC,EAEAK,qBAAsB,WAEpB,OAAOJ,EAAAA,EAAAA,IADM,eAEf,EAEAK,8BAA+B,SAACC,EAASC,GAEvC,OAAOP,EAAAA,EAAAA,IADM,IACgB,CAAEM,QAAAA,EAASC,kBAAAA,GAC1C,EAEAC,iBAAkB,SAACT,GAEjB,OAAOC,EAAAA,EAAAA,KADM,sBACiBD,EAChC,EAEAU,kBAAmB,SAACV,GAGlB,OAAOC,EAAAA,EAAAA,KAFM,eAEiBD,EAChC,EAEAW,UAAW,SAACC,GACV,IAAMC,EAAI,0BAAsBD,GAChC,OAAOX,EAAAA,EAAAA,IAAgBY,EACzB,EAEAC,cAAe,SAACF,GACd,IAAMC,EAAI,0BAAsBD,GAChC,OAAOX,EAAAA,EAAAA,IAAgBY,EACzB,EAEAE,sBAAuB,WAErB,OAAOd,EAAAA,EAAAA,IADG,mBAEZ,EAEAe,WAAY,SAACC,GACX,IAAMJ,EAAI,eAAWI,GAErB,OAAOhB,EAAAA,EAAAA,OAAmBY,EAC5B,EAEAK,aAAc,SAAClB,GAEb,OAAOC,EAAAA,EAAAA,IADG,mBACmBD,EAC/B,EAEAmB,aAAc,SAACC,EAAaC,GAC1B,IAAMR,EAAI,2CAAuCO,EAAW,wBAAgBC,GAC5E,OAAOpB,EAAAA,EAAAA,IAAgBY,EACzB,EAEAS,oBAAqB,WAGnB,OAAOrB,EAAAA,EAAAA,IADM,WAEf,EAEAsB,mBAAoB,SAACC,GAEnB,IAAMX,EAAI,gBAAYW,GACtB,OAAOvB,EAAAA,EAAAA,IAAgBY,EACzB,EAEAY,2BAA4B,SAACD,GAE3B,IAAMX,EAAI,gBAAYW,GACtB,OAAOvB,EAAAA,EAAAA,IAAgBY,EACzB,GAIF,K,8JCnFe,SAASa,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,cAchB,OAbAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,KAAU,CACRC,mBAAmB,EACnBC,KAAM,QACNC,MAAO,UACPC,KAAM,2BACNC,kBAAkB,iBACjBC,MAAK,SAACC,GACHA,EAAOC,aACTX,EAAQY,QAAQ,IAEpB,GACF,GAAG,KAED,uBAEJ,C,2BCOA,MArBA,SAAoBC,GAClB,IAAQC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,WAAW,IAAxDH,YAEWI,EAA4BL,EAAvCM,UAA8BC,GAAI,OAAKP,EAAK,GAChDQ,GAAWC,EAAAA,EAAAA,eACf,OACE,SAAC,EAAAC,OAAK,kBAAKH,GAAI,IAAEI,OAAQ,SAACC,GAAgB,IAAD,EACI,EAA3C,YAAgCC,KAAjB,OAAXZ,QAAW,IAAXA,GAAiB,QAAN,EAAXA,EAAaa,YAAI,WAAN,EAAX,EAAmBC,MAEW,kBAAjB,OAAXd,QAAW,IAAXA,GAAiB,QAAN,EAAXA,EAAaa,YAAI,WAAN,EAAX,EAAmBC,OACd,SAACV,GAAc,UAAKO,KAEtB,SAAC1B,EAAiB,KAEpB,SAAC,EAAA8B,SAAQ,CAACC,GAAI,CACnBC,SAAU,YACVf,MAAOK,EAASU,WAEpB,IAEJ,C","sources":["api/usersApi.js","guards/AdminRoute/alertCanNotAccess.js","guards/AdminRoute/index.js"],"sourcesContent":["import axiosClient from \"./axiosClient\";\n\nconst usersApi = {\n  postDangKy: (user) => {\n    const path = \"/auth/signup\";\n    return axiosClient.post(path, user);\n  },\n\n  //post user:object taiKhoan, matKhau => nhận về data có accessToken\n  postDangNhap: (user) => {\n    const path = \"/auth/signin\";\n    console.log(user);\n    return axiosClient.post(path, user);\n  },\n\n  getDanhSachNguoiDung: () => {\n    const path = \"/user/getAll\";\n    return axiosClient.get(path);\n  },\n\n  getDanhSachNguoiDungPhanTrang: (soTrang, soPhanTuTrenTrang) => {\n    const path = \"/\";\n    return axiosClient.get(path, { soTrang, soPhanTuTrenTrang });\n  },\n\n  postThemNhanVien: (user) => {\n    const path = \"/auth/registerStaff\";\n    return axiosClient.post(path, user);\n  },\n\n  postThemNguoiDung: (user) => {\n    const path = \"/auth/signup\";\n\n    return axiosClient.post(path, user);\n  },\n\n  getTicket: (userId) =>{\n    const path = `/tickets?userId=${userId}`;\n    return axiosClient.get(path);\n  },\n\n  getTicketUser: (userId) =>{\n    const path = `/tickets?userId=${userId}`;\n    return axiosClient.get(path);\n  },\n\n  getTicketByAdminStaff: () =>{\n    const path = `/tickets/getList`;\n    return axiosClient.get(path);\n  },\n\n  deleteUser: (taiKhoan) => {\n    const path = `user/${taiKhoan}`;\n\n    return axiosClient.delete(path);\n  },\n\n  editTaiKhoan: (user) => {\n    const path = `/user/updateInfo`;\n    return axiosClient.put(path, user);\n  },\n\n  editPassword: (newPassword, oldPassword) => {\n    const path = `/auth/changePassword?newPassword=${newPassword}&oldPassword=${oldPassword}`;\n    return axiosClient.put(path);\n  },\n\n  getThongTinTaiKhoan: () => {\n    // console.log(\"Vô get\");\n    const path = \"/user/me\";\n    return axiosClient.get(path);\n  },\n\n  getChiTietTaiKhoan: (username) => {\n    // console.log(username);\n    const path = `/user/${username}`;\n    return axiosClient.get(path);\n  },\n\n  getChiTietTaiKhoanReviewer: (username) => {\n    // console.log(username);\n    const path = `/user/${username}`;\n    return axiosClient.get(path);\n  },\n\n};\n\nexport default usersApi;\n","import React, { useEffect } from 'react'\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function AlertCanNotAccess() {\n  const history = useHistory();\n  useEffect(() => {\n    Swal.fire({\n      allowOutsideClick: false,\n      icon: 'error',\n      title: 'Oops...',\n      text: 'You do not have access!!',\n      confirmButtonText: `Go back Home`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        history.replace('/')\n      }\n    })\n  }, [])\n  return (\n    <></>\n  )\n}\n","\nimport React from 'react';\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport AlertCanNotAccess from './alertCanNotAccess';\nimport usersApi from '../../api/usersApi';\nimport { LOGIN_SUCCESS } from '../../reducers/constants/Auth';\n\nfunction AdminRoute(props) {\n  const { currentUser } = useSelector((state) => state.authReducer);\n  // console.log(\"Admin-----: \", currentUser);\n  const { component: ComponentAdmin, ...rest } = props;\n  let location = useLocation();\n  return (\n    <Route {...rest} render={(routeProps) => {\n      if (currentUser?.data?.role !== undefined) {\n        // if (currentUser) {\n        if (currentUser?.data?.role === \"[ROLE_ADMIN]\") { \n          return <ComponentAdmin {...routeProps} />\n        }\n        return <AlertCanNotAccess />\n      }\n      return <Redirect to={{\n        pathname: \"/dangnhap\",\n        state: location.pathname,\n      }} />\n    }} />\n  )\n}\nexport default AdminRoute;"],"names":["usersApi","postDangKy","user","axiosClient","postDangNhap","console","log","getDanhSachNguoiDung","getDanhSachNguoiDungPhanTrang","soTrang","soPhanTuTrenTrang","postThemNhanVien","postThemNguoiDung","getTicket","userId","path","getTicketUser","getTicketByAdminStaff","deleteUser","taiKhoan","editTaiKhoan","editPassword","newPassword","oldPassword","getThongTinTaiKhoan","getChiTietTaiKhoan","username","getChiTietTaiKhoanReviewer","AlertCanNotAccess","history","useHistory","useEffect","Swal","allowOutsideClick","icon","title","text","confirmButtonText","then","result","isConfirmed","replace","props","currentUser","useSelector","state","authReducer","ComponentAdmin","component","rest","location","useLocation","Route","render","routeProps","undefined","data","role","Redirect","to","pathname"],"sourceRoot":""}